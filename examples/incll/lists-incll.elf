%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Sample queries from notes
%

perm : trm (list A) -> trm (list A) -> atm.
rev : trm (list A) -> trm (list A) -> atm.
id : trm (list A) -> trm (list A) -> atm.
idl : trm (list A) -> trm (list A) -> atm.
elem : trm int -> atm.

perm1 : prog ( ( ^ (elem X) =0 ^ (perm L K) ) =0 ^ (perm (cons X L) K) ).
perm2 : prog ( ^ (perm nil K) =0 ^(elem X) =0 ^ (perm nil (cons X K)) ).
perm3 : prog ( ^(perm nil nil) ).

rev1 : prog( (^(elem X) =>> ^(rev L K)) =>> ^(rev (cons X L) K) ). 
rev2 : prog( ^(rev nil K) =>> ^(elem X) =>> ^(rev nil (cons X K)) ).
rev3 : prog( ^(rev nil nil) ).

id1 : prog( (^(elem X) >=> ^(id L K)) =>> ^(id (cons X L) K) ). 
id2 : prog( ^(id nil K) =>> ^(elem X) =>> ^(id nil (cons X K)) ).
id3 : prog( ^(id nil nil) ).

idl1 : prog( (^(elem X) >=> ^(idl L K)) >=> ^(idl (cons X L) K) ). 
idl2 : prog( ^(idl nil K) =>> ^(elem X) =>> ^(idl nil (cons X K)) ).
idl3 : prog( ^(idl nil nil) ).

