README file for meta directory
------------------------------

funsyn        implements the functional calculus
funtypecheck  implements a type checker for this calculus
relfun        implements a converter from relational formulation
		of primitive recursive functions as LF signature
		to this functional calculus.


Regression test
---------------

relfun and funtypecheck are regression tested using the
command

	use "TEST/meta.sml";

from the  Twelf-SML top level. 




TODO list for relfun.com
------------------------

DONE -cs  1) lemmas 
DONE -cs  2) parameter cases
DONE -cs  3) mutual recursion
4) label store




TODO list of meta theorem prover
--------------------------------

Code Walk (Invariants, Mutual recursion)
DONE -cs Anchor into Twelf

DONE -cs Unify induction hypothesis result/residual lemmas to one construct.
DONE -cs Keep residual lemmas explicit

Make ctxblock adequate for formulas (left to right, instead  right to left)

Parameter Cases
  inductive cases:

    DONE -cs    Pruning in substitution. 
    
    DONE -cs    Add parameter introduction in the case that parameter and functional object
	do not live on the same level
    Add functionality for SOME clauses
    Assumption, all EVars for SOME are replaced by something closed 
	(* not a sensible assumption. Must be generalized *)
    How do we abstract over leftover EVars?


    NOTE: Skolemization does not have to include parameter blocks. There is
	some code written which accomplish this (see recursion.fun.clean)

  base cases
Splittin Residual lemmas
Index variables
Proof terms


Problems: Leftover constraints in TEST-CR/a.sml when proving m-subst