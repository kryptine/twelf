%sig FOL = {
  i : type.
  o : type.
  true : o -> type.
  %% ...
}

%sig Semigroup = {
  %include FOL.
  comp : i -> i -> i. %% (actually FOL.i; this must be discussed)
  %% assoc : ...
}

%sig Monoid = {
  %include FOL.
  %struc sgr : Semigroup = {}.
  e : i.
  %% unit-left : ...
  %% unit-right : ...
}

%sig Order = {
  %include FOL.
  leq : i -> i -> o.
  %% refl : ...
  %% antisym : ...
  %% trans : ...
}

%view Opposite : Order -> Order = {
  leq := [x][y] (leq y x).
  %% refl := ...
  %% antisym := ...
  %% trans := ...
}.

%sig Semilattice = {
  %include FOL.
  %struc ord : Order = {}.
  %struc comp : Semigroup = {}.
}.

%sig Lattice = {
  %include FOL.
  %struc min : Semilattice = {}.
  %struc max : Semilattice = {ord := Opposite min.ord}.
  /\ = min.comp
  \/ = max.comp
}.

%% lattice with least and greatest elements (by using monoids instead of semigroups)
%sig LGLattice = {
  %include FOL.
  %struc lat : Lattice = {}.
  %struc min : Monoid = {sgr := lat.min.comp.}.
  %struc max : Monoid = {sgr := lat.max.comp.}.
  /\ = lat./\.
  \/ = lat.\/.
  bot = min.unit.
  top = max.unit.
}.