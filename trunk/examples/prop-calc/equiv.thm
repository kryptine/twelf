% abs implements bracket abstraction which amounts to
% the computational content of the deduction theorem.

%theorem abst : forall* {A:o} {B:o} 
                forall {P: (|- A -> |- B)}
                exists {Q : |- A => B} true.
%prove 3 P (abst P _).

%terminates P (abst P _).


%theorem comdefn : forall* {A:o}
	           forall {P : |- A}
	           exists {Q : ! A} true.
%terminates P (comdefn P _).
%{ -bp this takes a loooong time; filling has a lot of work to do 
in two of the cases (each one of these problematic cases takes nearly
2 hours)
- strangely enough, when Twelf can't prove it when I run it over night 
}%
%prove 6 P (comdefn P _).
	


